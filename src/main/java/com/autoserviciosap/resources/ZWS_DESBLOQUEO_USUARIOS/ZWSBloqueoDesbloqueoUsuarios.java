
package com.autoserviciosap.resources.ZWS_DESBLOQUEO_USUARIOS;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;

import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.1
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ZWS_bloqueo_desbloqueo_usuarios", targetNamespace = "urn:sap-com:document:sap:rfc:functions", wsdlLocation = "http://nsxwspd01.nasoft.com:8000/sap/bc/srt/wsdl/flv_10002A111AD1/bndg_url/sap/bc/srt/rfc/sap/zwsbloqueo_desbloqueo_usrs/100/zws_bloqueo_desbloqueo_usuarios/zbd_bloqueo_desbloqueo_usuarios?sap-client=100")
public class ZWSBloqueoDesbloqueoUsuarios
    extends Service
{

    private static final URL ZWSBLOQUEODESBLOQUEOUSUARIOS_WSDL_LOCATION;
    private static final WebServiceException ZWSBLOQUEODESBLOQUEOUSUARIOS_EXCEPTION;
    //MABE
    //private final static QName ZWSBLOQUEODESBLOQUEOUSUARIOS_QNAME = new QName("urn:sap-com:document:sap:rfc:functions", "ZWS_bloqueo_desbloqueo_usuarios");
    //AT
    private static final QName ZWSBLOQUEODESBLOQUEOUSUARIOS_QNAME = new QName("urn:sap-com:document:sap:rfc:functions", "ZWS_BLOQUEO_DESBLOQUEO_USUARIOS");

    static {
        var url = (URL) null;
        var e = (WebServiceException) null;
        try {
            var wsdlUrl = System.getProperty("sap.wsdl.url");
            if (wsdlUrl == null || wsdlUrl.isEmpty()) {
                wsdlUrl = System.getenv("SAP_WSDL_URL");
            }
            if (wsdlUrl == null || wsdlUrl.isEmpty()) {
                throw new MalformedURLException("WSDL URL not set in system property 'sap.wsdl.url' or environment variable 'SAP_WSDL_URL'");
            }
            url = new URL(wsdlUrl);
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ZWSBLOQUEODESBLOQUEOUSUARIOS_WSDL_LOCATION = url;
        ZWSBLOQUEODESBLOQUEOUSUARIOS_EXCEPTION = e;
    }

    public ZWSBloqueoDesbloqueoUsuarios() {
        super(__getWsdlLocation(), ZWSBLOQUEODESBLOQUEOUSUARIOS_QNAME);
    }

    public ZWSBloqueoDesbloqueoUsuarios(WebServiceFeature... features) {
        super(__getWsdlLocation(), ZWSBLOQUEODESBLOQUEOUSUARIOS_QNAME, features);
    }

    public ZWSBloqueoDesbloqueoUsuarios(URL wsdlLocation) {
        super(wsdlLocation, ZWSBLOQUEODESBLOQUEOUSUARIOS_QNAME);
    }

    public ZWSBloqueoDesbloqueoUsuarios(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ZWSBLOQUEODESBLOQUEOUSUARIOS_QNAME, features);
    }

    public ZWSBloqueoDesbloqueoUsuarios(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ZWSBloqueoDesbloqueoUsuarios(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ZWSBloqueoDesbloqueoUsrs
     */
    @WebEndpoint(name = "ZBD_bloqueo_desbloqueo_usuarios")
    public ZWSBloqueoDesbloqueoUsrs getZBDBloqueoDesbloqueoUsuarios() {
        return super.getPort(new QName("urn:sap-com:document:sap:rfc:functions", "ZBD_bloqueo_desbloqueo_usuarios"), ZWSBloqueoDesbloqueoUsrs.class);
    }

    /**
     * 
    * @param features
    *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ZWSBloqueoDesbloqueoUsrs
     */
    @WebEndpoint(name = "ZBD_bloqueo_desbloqueo_usuarios")
    public ZWSBloqueoDesbloqueoUsrs getZBDBloqueoDesbloqueoUsuarios(WebServiceFeature... features) {
        return super.getPort(new QName("urn:sap-com:document:sap:rfc:functions", "ZBD_bloqueo_desbloqueo_usuarios"), ZWSBloqueoDesbloqueoUsrs.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ZWSBLOQUEODESBLOQUEOUSUARIOS_EXCEPTION instanceof WebServiceException wse && wse.getCause() != null) {
            throw wse;
        }
        return ZWSBLOQUEODESBLOQUEOUSUARIOS_WSDL_LOCATION;
    }

}
